#include <iostream>
#include "Prototypes.h"
#include <string>
#include <vector>

using namespace std;

int main() {
    RBT<int, int> rbt = RBT<int, int>();

    rbt.insert(13, 5);
    rbt.insert(8, 9);
    rbt.insert(17, 20);
    rbt.insert(25, 2);
    rbt.insert(1, -3);
    rbt.insert(11, -8);

    std::vector<int>* key_arr;
    key_arr = rbt.call_keys();

    std::vector<int>* val_arr;
    val_arr = rbt.call_vals();

    try
    {
        rbt.print();

        cout << "Keys: " << endl;
        for (size_t i = 0; i < key_arr->size(); ++i) {
            cout << key_arr[0][i] << ' ';
        }
        cout << endl;
        key_arr->clear();

        cout << "Values: " << endl;
        for (size_t i = 0; i < val_arr->size(); ++i) {
            cout << val_arr[0][i] << ' ';
        }
        cout << endl;
        val_arr->clear();

        cout << endl << "Delete the key \"1\": " << endl;
        rbt.remove(1);
        rbt.print();
    }
    catch (out_of_range e)
    {
        cerr << e.what() << endl;
    }

    try {
        rbt.clear();
    }
    catch (out_of_range e)
    {
        cerr << e.what() << endl;
    }
    return 0;
}
